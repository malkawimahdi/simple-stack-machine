begin 
   if ( ( ( -1 - ( x__ ) ) + foo ( ) ) - _$$ ) then 
      while ( bar ( ) / iD0 ) do 
         if ( 195 - -1 ) then 
            return -1 == 1 ; 
            if ( 514 ) then 
            else 
               printchar 58 ; 
            endif 
            printint 904 ; 
            return -104 ; 
         else 
            return 574 ; 
            printchar Id99 ; 
            printint 61 ; 
            printint _a ; 
            printint x ; 
         endif 
         printint x ; 
         return _a ; 
         x__ = iD0 ; 
      done 
      return Y ; 
      while ( Id99 ) do 
         if ( 250 ) then 
            printchar 63 ; 
            fuBar1 ( ) ; 
            while ( 326 ) do 
            done 
         else 
            printchar Id99 ; 
            return _a ; 
            printchar _Algernon_ ; 
            printchar 54 ; 
         endif 
         return _a ; 
      done 
      if ( 818 ) then 
         return xx$7 ; 
         printchar iD0 + xx$7 ; 
         printchar 57 ; 
      else 
         return -103 ; 
         printint 36 ; 
         printchar 67 ; 
      endif 
      if ( 422 < Y ) then 
         if ( 267 ) then 
         else 
            printint Id99 ; 
         endif 
      else 
         printint 892 ; 
      endif 
      while ( __ ) do 
         printint iD0 ; 
      done 
      return 1 ; 
      printchar 79 ; 
      if ( x__ ) then 
      else 
         return 180 ; 
      endif 
      printchar 90 ; 
      return -225 ; 
      printint x__ ; 
      printchar z ; 
   else 
      printchar Y / ( _a ) ; 
      printint _Algernon_ ; 
      return __ ; 
      return ( _$$ ) * 526 ; 
      printint 321 ; 
      printint 0 ; 
   endif 
   return foo ( 311 , 447 , foo ( ) , xx$7 == __ ) < foo ( ( Y ) , ( 665 ) <= -1 , 145 , x__ , -1 ) ; 
   if ( 313 ) then 
      while ( -1 ) do 
         return -266 ; 
         printint 438 ; 
      done 
   else 
      printchar _a ; 
      printchar Id99 ; 
      printint -221 ; 
   endif 
   return 518 ; 
end 
fun g ( ) { 
} 
fun fuBar1 ( ) { 
} 
